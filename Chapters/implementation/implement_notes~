The driver script, azishe.py. 

Separable components of the simular havebeen modularized, parameter\_work, table\_work etc. This keeps the logic separate, makes it easy to follow and debug.
Controlling input, station dependent variables read from a separate txt file (whose name is in the main parameter dictionary)
MS creation with the simms task, https://github.com/radio-astro/simms.

turbo-sim with Meqtrees

make images for checking at various steps, useful for debugging and judging qualitative impact

Construction of a new class object which handles the more detailed tropospheric corruption. 

attenuation, noise and phase fluctuation.

plot uv coverage

timing the run time is important as well as isolating which parts of the code are slowest.
Inputs - 
station text file
Json parameter dictionary, prefixes and filtering

Through the ever useful Python module structure we make abundant use of Numerical Python, NumPY,  

MeqTrees (Smirnov, ) performs the FFT and UV sampling. Meqtrees is used with a python-like API called pyxis. 

PyFITS for the handling of FITS files, 

NumPY for all numerical operations, numpy broadcasting, numpy functionality. The setup of matricies for broadcasting.

pyrap + casapy is a python API for Measurement Set(MS) format. MS is user friendly data format.

